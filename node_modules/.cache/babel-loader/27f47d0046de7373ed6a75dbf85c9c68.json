{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivang\\\\PycharmProjects\\\\Pirates\\\\src\\\\components\\\\scrollbar\\\\scrollbar.tsx\";\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nconst ScrollHostContainer = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n`;\nconst ScrollHost = styled.div`\n  position: relative;\n  height: 100%;\n  overflow: auto;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\nconst StyledScrollBar = styled.div`\n  position: absolute;\n  right: -8px;\n  top: 0;\n  bottom: 0;\n  width: 10px;\n  height: 100%;\n  border-radius: 2px;\n  background-color: ${({\n  theme\n}) => theme.bgActive};\n`;\nconst ScrollThumb = styled.div`\n  position: absolute;\n  top: 0;\n  margin-left: 1px;\n  width: 8px;\n  height: 20px;\n  border-radius: 2px;\n  background-color: ${({\n  theme\n}) => theme.bgAdditional};\n`;\nconst SCROLL_BOX_MIN_HEIGHT = 20;\n\nconst Scrollbar = ({\n  children,\n  scrollToBottom = true\n}) => {\n  const scrollHostRef = useRef(null);\n  const [scrollBoxHeight, setScrollBoxHeight] = useState(SCROLL_BOX_MIN_HEIGHT);\n  const [scrollBoxTop, setScrollBoxTop] = useState(0);\n  const [lastScrollThumbPosition, setScrollThumbPosition] = useState(0);\n  const [isDragging, setDragging] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (scrollToBottom) {\n      var _messagesEndRef$curre;\n\n      (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [children, scrollToBottom]);\n  const handleDocumentMouseUp = useCallback(event => {\n    if (isDragging) {\n      event.preventDefault();\n      setDragging(false);\n    }\n  }, [isDragging]);\n  const handleDocumentMouseMove = useCallback(event => {\n    if (isDragging && scrollHostRef.current) {\n      event.preventDefault();\n      event.stopPropagation();\n      const scrollHostElement = scrollHostRef.current;\n      const {\n        scrollHeight,\n        offsetHeight\n      } = scrollHostElement;\n      const deltaY = event.clientY - lastScrollThumbPosition;\n      const percentage = deltaY * (scrollHeight / offsetHeight);\n      setScrollThumbPosition(event.clientY);\n      setScrollBoxTop(Math.min(Math.max(0, scrollBoxTop + deltaY), offsetHeight - scrollBoxHeight));\n      scrollHostElement.scrollTop = Math.min(scrollHostElement.scrollTop + percentage, scrollHeight - offsetHeight);\n    }\n  }, [isDragging, lastScrollThumbPosition, scrollBoxHeight, scrollBoxTop]);\n  const handleScrollThumbMouseDown = useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    setScrollThumbPosition(event.clientY);\n    setDragging(true);\n  }, []);\n  const handleScroll = useCallback(() => {\n    if (scrollHostRef && scrollHostRef.current) {\n      const {\n        scrollTop,\n        scrollHeight,\n        offsetHeight\n      } = scrollHostRef.current;\n      let newTop = scrollTop / scrollHeight * offsetHeight;\n      newTop = Math.min(newTop, offsetHeight - scrollBoxHeight);\n      setScrollBoxTop(newTop);\n    }\n  }, [scrollBoxHeight]);\n  useEffect(() => {\n    const scrollHostElement = scrollHostRef.current;\n\n    if (scrollHostElement) {\n      const {\n        clientHeight,\n        scrollHeight\n      } = scrollHostElement;\n      const scrollThumbPercentage = clientHeight / scrollHeight;\n      const scrollThumbHeight = Math.max(scrollThumbPercentage * clientHeight, SCROLL_BOX_MIN_HEIGHT);\n      setScrollBoxHeight(scrollThumbHeight);\n      scrollHostElement.addEventListener('scroll', handleScroll, true);\n      return () => {\n        scrollHostElement.removeEventListener('scroll', handleScroll, true);\n      };\n    }\n\n    return undefined;\n  }, [children, handleScroll]);\n  useEffect(() => {\n    document.addEventListener('mousemove', handleDocumentMouseMove);\n    document.addEventListener('mouseup', handleDocumentMouseUp);\n    document.addEventListener('mouseleave', handleDocumentMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleDocumentMouseMove);\n      document.removeEventListener('mouseup', handleDocumentMouseUp);\n      document.removeEventListener('mouseleave', handleDocumentMouseUp);\n    };\n  }, [handleDocumentMouseMove, handleDocumentMouseUp]);\n  return /*#__PURE__*/React.createElement(ScrollHostContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ScrollHost, {\n    ref: scrollHostRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    ref: messagesEndRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(StyledScrollBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ScrollThumb, {\n    style: {\n      height: scrollBoxHeight,\n      top: scrollBoxTop\n    },\n    onMouseDown: handleScrollThumbMouseDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Scrollbar;","map":{"version":3,"sources":["C:/Users/ivang/PycharmProjects/Pirates/src/components/scrollbar/scrollbar.tsx"],"names":["React","useCallback","useEffect","useRef","useState","styled","ScrollHostContainer","div","ScrollHost","StyledScrollBar","theme","bgActive","ScrollThumb","bgAdditional","SCROLL_BOX_MIN_HEIGHT","Scrollbar","children","scrollToBottom","scrollHostRef","scrollBoxHeight","setScrollBoxHeight","scrollBoxTop","setScrollBoxTop","lastScrollThumbPosition","setScrollThumbPosition","isDragging","setDragging","messagesEndRef","current","scrollIntoView","behavior","handleDocumentMouseUp","event","preventDefault","handleDocumentMouseMove","stopPropagation","scrollHostElement","scrollHeight","offsetHeight","deltaY","clientY","percentage","Math","min","max","scrollTop","handleScrollThumbMouseDown","handleScroll","newTop","clientHeight","scrollThumbPercentage","scrollThumbHeight","addEventListener","removeEventListener","undefined","document","height","top"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\n\nconst ScrollHostContainer = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n`;\n\nconst ScrollHost = styled.div`\n  position: relative;\n  height: 100%;\n  overflow: auto;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst StyledScrollBar = styled.div`\n  position: absolute;\n  right: -8px;\n  top: 0;\n  bottom: 0;\n  width: 10px;\n  height: 100%;\n  border-radius: 2px;\n  background-color: ${({ theme }) => theme.bgActive};\n`;\n\nconst ScrollThumb = styled.div`\n  position: absolute;\n  top: 0;\n  margin-left: 1px;\n  width: 8px;\n  height: 20px;\n  border-radius: 2px;\n  background-color: ${({ theme }) => theme.bgAdditional};\n`;\n\ninterface ScrollbarProps {\n  children: React.ReactNode;\n  scrollToBottom?: boolean;\n}\n\nconst SCROLL_BOX_MIN_HEIGHT = 20;\n\nconst Scrollbar: React.FC<ScrollbarProps> = ({\n  children,\n  scrollToBottom = true,\n}) => {\n  const scrollHostRef = useRef<HTMLDivElement>(null);\n  const [scrollBoxHeight, setScrollBoxHeight] = useState(SCROLL_BOX_MIN_HEIGHT);\n  const [scrollBoxTop, setScrollBoxTop] = useState(0);\n  const [lastScrollThumbPosition, setScrollThumbPosition] = useState(0);\n  const [isDragging, setDragging] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (scrollToBottom) {\n      messagesEndRef.current?.scrollIntoView({\n        behavior: 'smooth',\n      });\n    }\n  }, [children, scrollToBottom]);\n\n  const handleDocumentMouseUp = useCallback((event: MouseEvent) => {\n    if (isDragging) {\n      event.preventDefault();\n      setDragging(false);\n    }\n  }, [isDragging]);\n\n  const handleDocumentMouseMove = useCallback((event: MouseEvent) => {\n    if (isDragging && scrollHostRef.current) {\n      event.preventDefault();\n      event.stopPropagation();\n      const scrollHostElement = scrollHostRef.current;\n      const { scrollHeight, offsetHeight } = scrollHostElement;\n\n      const deltaY = event.clientY - lastScrollThumbPosition;\n      const percentage = deltaY * (scrollHeight / offsetHeight);\n\n      setScrollThumbPosition(event.clientY);\n      setScrollBoxTop(\n        Math.min(\n          Math.max(0, scrollBoxTop + deltaY),\n          offsetHeight - scrollBoxHeight,\n        ),\n      );\n      scrollHostElement.scrollTop = Math.min(\n        scrollHostElement.scrollTop + percentage,\n        scrollHeight - offsetHeight,\n      );\n    }\n  }, [isDragging, lastScrollThumbPosition, scrollBoxHeight, scrollBoxTop]);\n\n  const handleScrollThumbMouseDown = useCallback((event: React.MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setScrollThumbPosition(event.clientY);\n    setDragging(true);\n  }, []);\n\n  const handleScroll = useCallback(() => {\n    if (scrollHostRef && scrollHostRef.current) {\n      const { scrollTop, scrollHeight, offsetHeight } = scrollHostRef.current;\n\n      let newTop = (scrollTop / scrollHeight) * offsetHeight;\n      newTop = Math.min(newTop, offsetHeight - scrollBoxHeight);\n      setScrollBoxTop(newTop);\n    }\n  }, [scrollBoxHeight]);\n\n  useEffect(() => {\n    const scrollHostElement = scrollHostRef.current;\n    if (scrollHostElement) {\n      const { clientHeight, scrollHeight } = scrollHostElement;\n      const scrollThumbPercentage = clientHeight / scrollHeight;\n      const scrollThumbHeight = Math.max(\n        scrollThumbPercentage * clientHeight,\n        SCROLL_BOX_MIN_HEIGHT,\n      );\n      setScrollBoxHeight(scrollThumbHeight);\n      scrollHostElement.addEventListener('scroll', handleScroll, true);\n      return () => {\n        scrollHostElement.removeEventListener('scroll', handleScroll, true);\n      };\n    }\n    return undefined;\n  }, [children, handleScroll]);\n\n  useEffect(() => {\n    document.addEventListener('mousemove', handleDocumentMouseMove);\n    document.addEventListener('mouseup', handleDocumentMouseUp);\n    document.addEventListener('mouseleave', handleDocumentMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleDocumentMouseMove);\n      document.removeEventListener('mouseup', handleDocumentMouseUp);\n      document.removeEventListener('mouseleave', handleDocumentMouseUp);\n    };\n  }, [handleDocumentMouseMove, handleDocumentMouseUp]);\n\n  return (\n    <ScrollHostContainer>\n      <ScrollHost ref={scrollHostRef}>\n        {children}\n        <div ref={messagesEndRef} />\n      </ScrollHost>\n      <StyledScrollBar>\n        <ScrollThumb\n          style={{ height: scrollBoxHeight, top: scrollBoxTop }}\n          onMouseDown={handleScrollThumbMouseDown}\n        />\n      </StyledScrollBar>\n    </ScrollHostContainer>\n  );\n};\n\nexport default Scrollbar;\n"]},"metadata":{},"sourceType":"module"}