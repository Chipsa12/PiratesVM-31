{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivang\\\\PycharmProjects\\\\Pirates\\\\src\\\\components\\\\button\\\\button.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst StyledButton = styled.button`\n  background: ${({\n  theme\n}) => theme.bg};\n  color: ${({\n  theme\n}) => theme.fg};\n  font-size: 2rem;\n  margin: 4px;\n  padding: 20px 10px;\n  border: none;\n  border-radius: 50px;\n  user-select: none;\n  line-height: 2.3rem;\n\n  &:hover {\n    cursor: pointer;\n    background: ${({\n  theme\n}) => theme.bgActive};\n    border: 1px solid;\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid;\n  }\n  \n  &[disabled] {\n    opacity: 0.9;\n    cursor: not-allowed;\n  }\n`;\n\nconst Button = ({\n  children = 'Default button',\n  onClick = () => {},\n  className = '',\n  disabled = false,\n  ...attrs\n}) => {\n  const onClickAction = event => disabled ? event.preventDefault() : onClick(event);\n\n  return /*#__PURE__*/React.createElement(StyledButton, Object.assign({\n    className: className,\n    disabled: disabled,\n    onClick: onClickAction\n  }, attrs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nexport default Button;","map":{"version":3,"sources":["C:/Users/ivang/PycharmProjects/Pirates/src/components/button/button.tsx"],"names":["React","styled","StyledButton","button","theme","bg","fg","bgActive","Button","children","onClick","className","disabled","attrs","onClickAction","event","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACE,MAAO;gBACnB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,EAAG;WAC7B,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,EAAG;;;;;;;;;;;kBAWjB,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,QAAS;;;;;;;;;;;;;CAbhD;;AAmCA,MAAMC,MAA6E,GAAG,CAAC;AACrFC,EAAAA,QAAQ,GAAG,gBAD0E;AAErFC,EAAAA,OAAO,GAAG,MAAM,CAAE,CAFmE;AAGrFC,EAAAA,SAAS,GAAG,EAHyE;AAIrFC,EAAAA,QAAQ,GAAG,KAJ0E;AAKrF,KAAGC;AALkF,CAAD,KAMhF;AACJ,QAAMC,aAAa,GAAIC,KAAD,IAAWH,QAAQ,GAAGG,KAAK,CAACC,cAAN,EAAH,GAA4BN,OAAO,CAACK,KAAD,CAA5E;;AAEA,sBACE,oBAAC,YAAD;AACE,IAAA,SAAS,EAAEJ,SADb;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,IAAA,OAAO,EAAEE;AAHX,KAIMD,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGJ,QANH,CADF;AAUD,CAnBD;;AAqBA,eAAeD,MAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  background: ${({ theme }) => theme.bg};\n  color: ${({ theme }) => theme.fg};\n  font-size: 2rem;\n  margin: 4px;\n  padding: 20px 10px;\n  border: none;\n  border-radius: 50px;\n  user-select: none;\n  line-height: 2.3rem;\n\n  &:hover {\n    cursor: pointer;\n    background: ${({ theme }) => theme.bgActive};\n    border: 1px solid;\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid;\n  }\n  \n  &[disabled] {\n    opacity: 0.9;\n    cursor: not-allowed;\n  }\n`;\n\nexport interface ButtonProps {\n  children: React.ReactNode;\n  onClick?: (event: React.ReactEventHandler) => void;\n  className?: string;\n  disabled?: boolean;\n}\n\nconst Button: React.FC<ButtonProps & React.ButtonHTMLAttributes<HTMLButtonElement>> = ({\n  children = 'Default button',\n  onClick = () => {},\n  className = '',\n  disabled = false,\n  ...attrs\n}) => {\n  const onClickAction = (event) => disabled ? event.preventDefault() : onClick(event);\n\n  return (\n    <StyledButton\n      className={className}\n      disabled={disabled}\n      onClick={onClickAction}\n      {...attrs}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}