{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivang\\\\PycharmProjects\\\\Pirates\\\\src\\\\components\\\\chat\\\\chat.tsx\";\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../button/button';\nimport Input from '../input/input';\nimport Messages from '../messages/messages';\nimport AuthContext from '../../contexts/auth.context';\nimport socket from '../../helpers/socket';\nimport { SOCKET_EVENTS } from '../../constants/socket.constants';\nconst StyledChat = styled.div`\n  padding: 20px 10px;\n  width: 100%;\n  height: 100%;\n  max-width: 700px;\n  max-height: 700px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: column;\n`;\nconst StyledForm = styled.form`\n  width: 100%;\n  display: flex;\n`;\n\nconst Chat = () => {\n  const messageRef = useRef(null);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const {\n    token\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const subscribeToMessages = message => setMessages(messages => [...messages, message]);\n\n    socket.on(SOCKET_EVENTS.SEND_MESSAGE, subscribeToMessages);\n    return () => {\n      socket.removeListener(SOCKET_EVENTS.SEND_MESSAGE, subscribeToMessages);\n    };\n  }, []);\n\n  const handleInputChange = ({\n    target\n  }) => {\n    setMessage(target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (message.trim().length) {\n      socket.emit(SOCKET_EVENTS.SEND_MESSAGE, {\n        token,\n        message\n      }, () => {\n        var _messageRef$current;\n\n        setMessage('');\n        (_messageRef$current = messageRef.current) === null || _messageRef$current === void 0 ? void 0 : _messageRef$current.focus();\n      });\n    }\n  };\n\n  const handleFormSubmit = event => event.preventDefault();\n\n  return /*#__PURE__*/React.createElement(StyledChat, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StyledForm, {\n    onSubmit: handleFormSubmit,\n    className: \"send-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"send-message\",\n    type: \"text\",\n    name: \"message\",\n    value: message,\n    onChange: handleInputChange,\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, '>')));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/ivang/PycharmProjects/Pirates/src/components/chat/chat.tsx"],"names":["React","useContext","useEffect","useRef","useState","styled","Button","Input","Messages","AuthContext","socket","SOCKET_EVENTS","StyledChat","div","StyledForm","form","Chat","messageRef","messages","setMessages","message","setMessage","token","subscribeToMessages","on","SEND_MESSAGE","removeListener","handleInputChange","target","value","handleSendMessage","trim","length","emit","current","focus","handleFormSubmit","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../button/button';\nimport Input from '../input/input';\nimport Messages, { MessagesInterface } from '../messages/messages';\nimport AuthContext from '../../contexts/auth.context';\nimport socket from '../../helpers/socket';\nimport { SOCKET_EVENTS } from '../../constants/socket.constants';\nimport { MessageInterface } from '../messages/message/message';\n\nconst StyledChat = styled.div`\n  padding: 20px 10px;\n  width: 100%;\n  height: 100%;\n  max-width: 700px;\n  max-height: 700px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: column;\n`;\n\nconst StyledForm = styled.form`\n  width: 100%;\n  display: flex;\n`;\n\nconst Chat = () => {\n  const messageRef = useRef<HTMLInputElement>(null);\n  const [messages, setMessages] = useState<MessagesInterface['messages']>([]);\n  const [message, setMessage] = useState('');\n  const { token } = useContext(AuthContext);\n\n  useEffect(() => {\n    const subscribeToMessages = (message: MessageInterface) => setMessages(messages => [...messages, message]);\n    socket.on(SOCKET_EVENTS.SEND_MESSAGE, subscribeToMessages);\n    return () => {\n      socket.removeListener(SOCKET_EVENTS.SEND_MESSAGE, subscribeToMessages)\n    };\n  }, []);\n\n  const handleInputChange = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n    setMessage(target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (message.trim().length) {\n      socket.emit(SOCKET_EVENTS.SEND_MESSAGE, { token, message }, () => {\n        setMessage('');\n        messageRef.current?.focus();\n      });\n    }\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => event.preventDefault();\n\n  return (\n    <StyledChat>\n      <Messages messages={messages} />\n      <StyledForm onSubmit={handleFormSubmit} className=\"send-message\">\n        <Input\n          id=\"send-message\"\n          type=\"text\"\n          name=\"message\"\n          value={message}\n          onChange={handleInputChange}\n          placeholder=\"Введите сообщение\"\n          autoComplete=\"off\"\n        />\n        <Button type=\"submit\" onClick={handleSendMessage}>{'>'}</Button>\n      </StyledForm>\n    </StyledChat>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}